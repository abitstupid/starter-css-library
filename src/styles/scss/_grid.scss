@use "sass:math";

$grid-columns: 12;
$grid-gap: (
	"0": 0,
	"1": $base-size,
	"2": $base-size * 2,
	"3": $base-size * 3,
	"4": $base-size * 4,
	"5": $base-size * 5,
	"max": $base-size * 8,
);

$layout-values: (
	"f-start": flex-start,
	"f-end": flex-end,
	"center": center,
	"space-between": space-between,
	"space-around": space-around,
);

// grid gap classes
@each $key, $val in $grid-gap {
	.gap-#{$key} > * {
		padding: $val;
	}

	.gap-#{$key} {
		margin-left: -$val;
		margin-right: -$val;
	}

	.gap-row-#{$key} > * {
		padding-bottom: $val;
		padding-top: $val;
	}

	.gap-col-#{$key} > * {
		padding-left: $val;
		padding-right: $val;
	}

	.gap-col-#{$key} {
		margin-left: -$val;
		margin-right: -$val;
	}
}

//justify content classes
@each $key, $val in $layout-values {
	.justify-#{$key} {
		justify-content: $val;
	}
}

//base layout classes
.container {
	width: 100%;
	max-width: 1200px;

	margin: 0 auto;
	padding: 0 $base-padding * 2;
}

.row {
	display: flex;
	flex-flow: row wrap;
}

// col- classes

@include xs {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-xs {
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include sm {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-sm {
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include md {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-md {
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include lg {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-lg {
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include xl {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-xl {
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}
